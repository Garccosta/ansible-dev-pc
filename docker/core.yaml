- name: Docker
  hosts: 127.0.0.1
  connection: local

  vars:
    distribution_fallback:
      'Pop!_OS': 'Ubuntu'

  tasks:
    - set_fact: is_wsl={{ lookup('file', '/proc/version') is regex('(M|m)icrosoft') }}

    - name: Determine Docker Compose latest version
      shell:
        cmd: "curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -i \"browser_download_url.*linux-x86_64\\\"\" | cut -d : -f 2,3 | tr -d \\\""
        warn: false
      register: docker_compose_version

    - name: Install Docker Compose
      become: yes
      get_url:
        url: "{{ docker_compose_version.stdout }}"
        dest: /usr/local/bin/docker-compose
        mode: 0755

    - name: Add Docker APT package key
      become: yes
      get_url:
        url: https://download.docker.com/linux/{{ distribution_fallback[ansible_distribution] | default(ansible_distribution) | lower }}/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: 0644

    - name: Add Docker APT package repository
      become: yes
      apt_repository:
        repo: deb [arch=amd64, signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/{{ distribution_fallback[ansible_distribution] | default(ansible_distribution) | lower }} {{ ansible_distribution_release }} stable
        filename: docker
        update_cache: no
      register: apt_repository_docker

    - name: Update APT package list
      become: yes
      apt:
        update_cache: yes
      when: apt_repository_docker.changed
      register: apt_update
      retries: 5
      until: apt_update is success

    - name: Install Docker engine
      become: yes
      apt:
        package: "{{ item }}"
      loop:
        - docker-ce
        - docker-ce-cli

    - name: Enable Docker engine for current user
      become: yes
      user:
        name={{ lookup('env', "USER") }}
        groups=docker
        append=yes

    - name: Add Mesa APT package key
      become: yes
      get_url:
        url: https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xeb8b81e14da65431d7504ea8f63f0f2b90935439
        dest: /etc/apt/keyrings/ppa_kisak_kisak_mesa_{{ ansible_distribution_release }}.asc
        mode: 0644

    - name: Add Mesa package source
      become: yes
      apt_repository:
        repo: deb [signed-by=/etc/apt/keyrings/ppa_kisak_kisak_mesa_{{ ansible_distribution_release }}.asc] http://ppa.launchpad.net/kisak/kisak-mesa/{{ distribution_fallback[ansible_distribution] | default(ansible_distribution) | lower }} {{ ansible_distribution_release }} main
        filename: ppa_kisak_kisak_mesa_{{ ansible_distribution_release }}
        update_cache: no
      register: apt_repository_mesa

    - name: Update APT package list
      become: yes
      apt:
        update_cache: yes
      when: apt_repository_mesa.changed
      register: apt_update
      retries: 5
      until: apt_update is success

    - name: Install Mesa libraries and utilities
      become: yes
      apt:
        package: "{{ item }}"
      loop:
        - libglapi-mesa
        - libglx-mesa0
        - mesa-utils

    - name: Add NVIDIA container runtime APT package key
      become: yes
      get_url:
        url: https://nvidia.github.io/nvidia-container-runtime/gpgkey
        dest: /etc/apt/keyrings/nvidia-container-runtime.asc
        mode: 0644

    - name: Add NVIDIA container runtime APT package source
      become: yes
      get_url:
        url: https://nvidia.github.io/nvidia-container-runtime/ubuntu{{ ansible_distribution_version }}/nvidia-container-runtime.list
        dest: /etc/apt/sources.list.d/nvidia-container-runtime.list
        mode: 0644
      register: apt_repository_nvidia

    - name: Update NVIDIA package source signature locations
      become: yes
      replace:
        path: /etc/apt/sources.list.d/nvidia-container-runtime.list
        regexp: deb http
        replace: deb [signed-by=/etc/apt/keyrings/nvidia-container-runtime.asc] http

    - name: Update APT package list
      become: yes
      apt:
        update_cache: yes
      when: apt_repository_nvidia.changed
      register: apt_update
      retries: 5
      until: apt_update is success

    - name: Install NVIDIA container runtime
      become: yes
      apt:
        package: nvidia-container-runtime

    - name: Determine Docker Machine latest version
      shell:
        cmd: "curl -s https://api.github.com/repos/docker/machine/releases/latest | grep \"browser_download_url.*Linux-x86_64\\\"\" | cut -d : -f 2,3 | tr -d \\\""
        warn: false
      register: docker_machine_version

    - name: Install Docker Machine
      become: yes
      get_url:
        url: "{{ docker_machine_version.stdout }}"
        dest: /usr/local/bin/docker-machine
        mode: 0755
